[
  {
    "Id": "730529",
    "ThreadId": "287368",
    "Html": "\r\n<p>Proposed on Google&#43; by Shanon Olsson.&nbsp; Add to the module a way to convert an arbitrary object into a valid table specification for a SQLite database.</p>\r\n<p>Initial thoughts on implementation options:</p>\r\n<p>1. A ConvertTo-SQLiteTableSpecification module member that will create a SQLite table specification Hashtable for an object type.</p>\r\n<p style=\"padding-left:30px\">Proposed usage:<br>\r\n&lt;input&gt; | ConvertTo-SQLiteTableSpecification | new-item db:\\MyTable</p>\r\n<p>2. Expand new-item to accept arbitrary input objects when creating new tables.&nbsp;</p>\r\n<p style=\"padding-left:30px\">Option A:</p>\r\n<p style=\"padding-left:30px\">When the user supplies pipeline input that is not recognized as one of the currently valid table specifications - that is, a hashtable, a DDL string, or dynamic parameters - new-item will assume that the table(s) should be created\r\n or expanded to include the fields in the objects.&nbsp; If no table name is supplied, new tables will be created for each type of object encountered in the input; however, each table will reflect only one level of the object graph - complex property types\r\n will be ignored (at least for the first implementation).</p>\r\n<p style=\"padding-left:30px\">In addition, a new table record is created for each input object.</p>\r\n<p style=\"padding-left:30px\">Example:</p>\r\n<p style=\"padding-left:30px\">get-eventlog -log application -newest 50 | new-item db:\\;</p>\r\n<p style=\"padding-left:30px\">This example creates a single new table named 'EventLogEntry' (derived from the input object typename) with the following DDL:</p>\r\n<p style=\"padding-left:30px\">&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">Create</span> <span style=\"color:blue\">Table</span> EventLogEntry (\r\n  Category <span style=\"color:blue\">text</span>,\r\n  CategoryNumber <span style=\"color:blue\">integer</span>,\r\n  Data blob,\r\n  EntryType <span style=\"color:blue\">integer</span>,\r\n  <span style=\"color:blue\">Index</span> <span style=\"color:blue\">integer</span>,\r\n  InstanceId <span style=\"color:blue\">integer</span>,\r\n  MachineName  <span style=\"color:blue\">text</span>,\r\n  Message <span style=\"color:blue\">text</span>,\r\n  ReplacementStrings <span style=\"color:blue\">text</span>.\r\n  Source <span style=\"color:blue\">Text</span>,\r\n  TimeGenerated <span style=\"color:blue\">text</span>,\r\n  TimeWritten  <span style=\"color:blue\">text</span>,\r\n  UserName  <span style=\"color:blue\">text</span>\r\n);\r\n</pre>\r\n</div>\r\n<p style=\"padding-left:30px\">&nbsp;</p>\r\n<p style=\"padding-left:30px\">Option B:</p>\r\n<p style=\"padding-left:30px\">A new-item -itemtype parameter value that will indicate the user wishes to auto-define table columns from the object graph.&nbsp; This option is identical to A with the exception that it requires an explicit request from the user\r\n to avoid getting a parameter binding error.</p>\r\n<p style=\"padding-left:30px\">Example:</p>\r\n<p style=\"padding-left:30px\">get-eventlog -log application -newest 50 | new-item db:\\ -itemType autotable;</p>\r\n<p>In addition to the implementation chosen, an Out-SQLite cmdlet should be added to the module to keep things simple:</p>\r\n<p>&lt;input&gt; | out-sqlite -datasource &lt;datasourcespec&gt; -include &lt;wildcard-property-name-pattern&gt;</p>\r\n<p>&lt;input&gt; | out-sqlite -path &lt;path-to-sqlite-drive&gt; -include &lt;wildcard-property-name-pattern&gt;</p>\r\n",
    "PostedDate": "2012-01-25T07:45:02.003-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "730540",
    "ThreadId": "287368",
    "Html": "<p>Talk about low barrier to entry for database creation! This would rock. I somewhat prefer option B. The reason is that it's so easy to pipe things around in&nbsp;PowerShell&nbsp;and I'd hate to&nbsp;accidentally&nbsp;screw up a database. Or is there perhaps a way to constrain a database at table creation time to either allow or disallow this autotable behavior on a table by table basis?</p>",
    "PostedDate": "2012-01-25T07:55:51.163-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]